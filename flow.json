[
    {
        "id": "6fd9c5c3c10bf6a2",
        "type": "tab",
        "label": "Stats",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1950552b.d4018b",
        "type": "tab",
        "label": "DBase Maint & Notifier",
        "disabled": false,
        "info": ""
    },
    {
        "id": "af115e9cb7244fd2",
        "type": "tab",
        "label": "Notification Checks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7fba952c219a3ff4",
        "type": "tab",
        "label": "Telnet Cluster",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9611467dc313430",
        "type": "subflow",
        "name": "Band Pin Color Parser",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 540,
                "y": 360,
                "wires": [
                    {
                        "id": "af429b2782adbaa7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1980,
                "y": 320,
                "wires": [
                    {
                        "id": "e140bd1326a604e7",
                        "port": 0
                    },
                    {
                        "id": "d7eecaed14d89601",
                        "port": 0
                    },
                    {
                        "id": "5cf206da68509424",
                        "port": 0
                    },
                    {
                        "id": "e2d981c2c24c6e4f",
                        "port": 0
                    },
                    {
                        "id": "d7dc7fa1d3799ada",
                        "port": 0
                    },
                    {
                        "id": "53c0cd92b15d3320",
                        "port": 0
                    },
                    {
                        "id": "af85e794677f30f0",
                        "port": 0
                    },
                    {
                        "id": "e25ae21f9ac978c6",
                        "port": 0
                    },
                    {
                        "id": "20e9ecd94f6a68d5",
                        "port": 0
                    },
                    {
                        "id": "258a2ed64a4e6b56",
                        "port": 0
                    },
                    {
                        "id": "e072594b8cf8774e",
                        "port": 0
                    },
                    {
                        "id": "f53163b98da1e27a",
                        "port": 0
                    },
                    {
                        "id": "ede60919683b5e49",
                        "port": 0
                    },
                    {
                        "id": "ccef6d35b655a407",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8d355125d2e4edb6",
        "type": "subflow",
        "name": "Band & Mode Parse",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 340,
                "wires": [
                    {
                        "id": "e0179a67.9640b8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2320,
                "y": 140,
                "wires": [
                    {
                        "id": "336c664dfb6d90d0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2320,
                "y": 200,
                "wires": [
                    {
                        "id": "1bb72f4a0819f216",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2320,
                "y": 260,
                "wires": [
                    {
                        "id": "6592f02193b4f720",
                        "port": 0
                    },
                    {
                        "id": "a75bb0a4cd22dce9",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2320,
                "y": 320,
                "wires": [
                    {
                        "id": "aa263a60635166f2",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2320,
                "y": 380,
                "wires": [
                    {
                        "id": "b3ee8487b8373fb4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 2320,
                "y": 440,
                "wires": [
                    {
                        "id": "e8279fe0447232c9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2924702c.b33a7",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "5eb0bd6b.74b794",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "50a9dd15acb28546",
        "type": "ui_tab",
        "name": "POTA Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d0d073ec2c91ebda",
        "type": "ui_group",
        "name": "POTA Spot Map by Band < 30 Min",
        "tab": "50a9dd15acb28546",
        "order": 4,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f6eff3d72acf92e0",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b1cd10a7.e2eab",
        "type": "ui_group",
        "name": "POTA Spots",
        "tab": "50a9dd15acb28546",
        "order": 6,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5255f96a02d65e0a",
        "type": "ui_group",
        "name": "General Spot Stats",
        "tab": "50a9dd15acb28546",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "310b567a804ff916",
        "type": "ui_group",
        "name": "Spots Stats by Mode",
        "tab": "50a9dd15acb28546",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0b0b1d35bd8369f6",
        "type": "ui_group",
        "name": "POTA Spot Map by Mode < 30 Min",
        "tab": "50a9dd15acb28546",
        "order": 5,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "266fc73.4322c38",
        "type": "ui_group",
        "name": "Database Adds",
        "tab": "a002cc51.3d92e",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ea6c0ad.787d0f",
        "type": "ui_group",
        "name": "SSB Database Inputs (uppercase)",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "95ec6ea4.0816c",
        "type": "ui_group",
        "name": "Digital Database Inputs (uppercase)",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "8ad1b77eebb71f03",
        "type": "sqlitedb",
        "db": "pota",
        "mode": "RWC"
    },
    {
        "id": "d0ac2fe7.d9f9c",
        "type": "ui_group",
        "name": "Loc Desc Output",
        "tab": "a002cc51.3d92e",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "64ea1b22.59ae54",
        "type": "ui_group",
        "name": "Park Output",
        "tab": "a002cc51.3d92e",
        "order": 4,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d9dce79.e995e2",
        "type": "ui_group",
        "name": "Database Deletes",
        "tab": "a002cc51.3d92e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a002cc51.3d92e",
        "type": "ui_tab",
        "name": "Configuration",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5543b98b5680f25b",
        "type": "ui_group",
        "name": "Callsign Output",
        "tab": "a002cc51.3d92e",
        "order": 3,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "55d6abfe8c5c758e",
        "type": "ui_group",
        "name": "Country Output",
        "tab": "a002cc51.3d92e",
        "order": 6,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ea01737847609c8",
        "type": "ui_group",
        "name": "Refresh Countdown",
        "tab": "50a9dd15acb28546",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b43e4ca38d9b76c",
        "type": "ui_group",
        "name": "Home Lat & Lon",
        "tab": "a002cc51.3d92e",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c742b00f4db5487",
        "type": "ui_group",
        "name": "Database Nuke Option",
        "tab": "a002cc51.3d92e",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8afbd37356b63495",
        "type": "ui_group",
        "name": "Outgoing Spots",
        "tab": "50a9dd15acb28546",
        "order": 7,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "474ee316d470b386",
        "type": "ui_group",
        "name": "Mins Per Notification",
        "tab": "a002cc51.3d92e",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "63e24272d68f8982",
        "type": "switch",
        "z": "c9611467dc313430",
        "name": "Get Band",
        "property": "payload.band",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "160M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "80M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "60M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "40M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "30M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "20M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "17M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "15M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2M",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "70cm",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 14,
        "x": 1280,
        "y": 340,
        "wires": [
            [
                "e140bd1326a604e7"
            ],
            [
                "d7eecaed14d89601"
            ],
            [
                "ccef6d35b655a407"
            ],
            [
                "5cf206da68509424"
            ],
            [
                "258a2ed64a4e6b56"
            ],
            [
                "d7dc7fa1d3799ada"
            ],
            [
                "e072594b8cf8774e"
            ],
            [
                "e2d981c2c24c6e4f"
            ],
            [
                "f53163b98da1e27a"
            ],
            [
                "53c0cd92b15d3320"
            ],
            [
                "af85e794677f30f0"
            ],
            [
                "e25ae21f9ac978c6"
            ],
            [
                "ede60919683b5e49"
            ],
            [
                "20e9ecd94f6a68d5"
            ]
        ]
    },
    {
        "id": "e140bd1326a604e7",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "160M Color Magenta",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#f032e6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d7eecaed14d89601",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "80M Color Green",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#3cb44b",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5cf206da68509424",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "40M Color Blue",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#4363d8",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d7dc7fa1d3799ada",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "20M Color Red",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#e6194B",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e2d981c2c24c6e4f",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "15M Color Yellow",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#ffe119",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "53c0cd92b15d3320",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "10M Color Orange",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#f58231",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "af85e794677f30f0",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "6M Color White",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e25ae21f9ac978c6",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "2M Color Mint",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#aaffc3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "20e9ecd94f6a68d5",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Else Color Black",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#000000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "Other",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "af429b2782adbaa7",
        "type": "switch",
        "z": "c9611467dc313430",
        "name": "Band Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800.0",
                "vt": "num",
                "v2": "2000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3500.0",
                "vt": "num",
                "v2": "4000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "5300",
                "vt": "num",
                "v2": "5500",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7000.0",
                "vt": "num",
                "v2": "7300.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "10100.0",
                "vt": "num",
                "v2": "10150.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14000.0",
                "vt": "num",
                "v2": "14350.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "18068.0",
                "vt": "num",
                "v2": "18168.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "24089.0",
                "vt": "num",
                "v2": "24099.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28000.0",
                "vt": "num",
                "v2": "29700.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50000.0",
                "vt": "num",
                "v2": "54000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "144000.0",
                "vt": "num",
                "v2": "148000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "440000.0",
                "vt": "num",
                "v2": "448000.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 13,
        "x": 730,
        "y": 360,
        "wires": [
            [
                "ef8b6e8518b22adc"
            ],
            [
                "ea50a7f15651220e"
            ],
            [
                "c6c21c9f20e7a51b"
            ],
            [
                "23a7f9d79dab3468"
            ],
            [
                "ab34ada2c3f27841"
            ],
            [
                "91fedb8d3623772a"
            ],
            [
                "741ace94c97526d4"
            ],
            [
                "74508556ea148805"
            ],
            [
                "2d0b0c5cd90f6e11"
            ],
            [
                "4f9433ab5b7037ac"
            ],
            [
                "38e6926a3d3fec0a"
            ],
            [
                "a2b4847bbf948415"
            ],
            [
                "ee6e2d8dd8273aef"
            ]
        ]
    },
    {
        "id": "7a5fab8617b7fb13",
        "type": "comment",
        "z": "c9611467dc313430",
        "name": "Input Frequency",
        "info": "",
        "x": 750,
        "y": 180,
        "wires": []
    },
    {
        "id": "ef8b6e8518b22adc",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 160M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "ea50a7f15651220e",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 80M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "23a7f9d79dab3468",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 40M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "91fedb8d3623772a",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 20M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "74508556ea148805",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 15M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "4f9433ab5b7037ac",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 10M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "38e6926a3d3fec0a",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 6M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "a2b4847bbf948415",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 2M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "ee6e2d8dd8273aef",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 70CM",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "70CM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "6797a328bc23a222",
        "type": "comment",
        "z": "c9611467dc313430",
        "name": "To Do",
        "info": "Add WARC bands with colors",
        "x": 1280,
        "y": 100,
        "wires": []
    },
    {
        "id": "ab34ada2c3f27841",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 30M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "30M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "741ace94c97526d4",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 17M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "17M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "2d0b0c5cd90f6e11",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 12M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "12M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "63e24272d68f8982"
            ]
        ]
    },
    {
        "id": "258a2ed64a4e6b56",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "30M Color Cyan",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#42d4f4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "30M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "30M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e072594b8cf8774e",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "17M Color Gray",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#a9a9a9",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "17M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "17M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f53163b98da1e27a",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "12M Color Brown",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#9A6324",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "12M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "12M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "ede60919683b5e49",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "70CM Color Lavender",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#dcbeff",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "70CM",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "70CM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c6c21c9f20e7a51b",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "Set Band 60M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "60M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ccef6d35b655a407",
        "type": "change",
        "z": "c9611467dc313430",
        "name": "60MM Color Olive",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#808000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "60M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "60M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e0179a67.9640b8",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Band Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800.0",
                "vt": "num",
                "v2": "2000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3500.0",
                "vt": "num",
                "v2": "4000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7000.0",
                "vt": "num",
                "v2": "7300.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "10100.0",
                "vt": "num",
                "v2": "10150.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14000.0",
                "vt": "num",
                "v2": "14350.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "18068.0",
                "vt": "num",
                "v2": "18168.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "24890.0",
                "vt": "num",
                "v2": "24990.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28000.0",
                "vt": "num",
                "v2": "29700.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50000.0",
                "vt": "num",
                "v2": "54000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "144000.0",
                "vt": "num",
                "v2": "148000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "440000.0",
                "vt": "num",
                "v2": "448000.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "0b9f1ae73ad69039"
            ],
            [
                "175f3aa602517e49"
            ],
            [
                "f06592db926fcf84"
            ],
            [
                "9633e9970c340a42"
            ],
            [
                "9753acbeeebf4656"
            ],
            [
                "657f7ed9e70dc511"
            ],
            [
                "827074b7c4b5c52f"
            ],
            [
                "97b1aecc1370f875"
            ],
            [
                "b081cc28cab2d511"
            ],
            [
                "601d12c10f0705d4"
            ],
            [
                "ea2c06042157739b"
            ],
            [
                "cd4d5af286e17fe4"
            ]
        ]
    },
    {
        "id": "83d55f2c.f5d7f",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "160M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800.0",
                "vt": "num",
                "v2": "1836.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1838.0",
                "vt": "num",
                "v2": "1839.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1840",
                "vt": "num",
                "v2": "1841.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1837.0",
                "vt": "num",
                "v2": "1839.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1845.0",
                "vt": "num",
                "v2": "2000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "1842.0",
                "vt": "num",
                "v2": "1844.9",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1670,
        "y": 780,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "e8279fe0447232c9"
            ]
        ]
    },
    {
        "id": "c629474c.113e38",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "80M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "3500.0",
                "vt": "num",
                "v2": "3572.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3573.0",
                "vt": "num",
                "v2": "3650.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3651.0",
                "vt": "num",
                "v2": "4000.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1710,
        "y": 60,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "d704dd26.1aca3",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "40M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "7000.0",
                "vt": "num",
                "v2": "7069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7070.0",
                "vt": "num",
                "v2": "7100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7100.1",
                "vt": "num",
                "v2": "7300.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 920,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "26752e6f.8b0412",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "20M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "14000.0",
                "vt": "num",
                "v2": "14069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14070.0",
                "vt": "num",
                "v2": "14149.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14150.0",
                "vt": "num",
                "v2": "14350.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 1040,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "3ebd4ba0.5ac374",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "15M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21070.0",
                "vt": "num",
                "v2": "21100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21100.1",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 1160,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "590b9a84.2eda94",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "10M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "28000",
                "vt": "num",
                "v2": "28073.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28074.0",
                "vt": "num",
                "v2": "28299.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28300.0",
                "vt": "num",
                "v2": "29700.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 1280,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "3cffd6b7.5568ea",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "6M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "50000.0",
                "vt": "num",
                "v2": "50100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50200",
                "vt": "num",
                "v2": "50500.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50100.1",
                "vt": "num",
                "v2": "50199.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50500.1",
                "vt": "num",
                "v2": "54000",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1680,
        "y": 1340,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ]
        ]
    },
    {
        "id": "ab26e4cc.250b48",
        "type": "comment",
        "z": "8d355125d2e4edb6",
        "name": "Input Frequency",
        "info": "",
        "x": 250,
        "y": 200,
        "wires": []
    },
    {
        "id": "0b9f1ae73ad69039",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 160M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "269ebb5a81c35055"
            ]
        ]
    },
    {
        "id": "175f3aa602517e49",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 80M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "34d9a1b4550bd48a"
            ]
        ]
    },
    {
        "id": "f06592db926fcf84",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 40M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 360,
        "wires": [
            [
                "1cd63e8bfc41e0e2"
            ]
        ]
    },
    {
        "id": "9753acbeeebf4656",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 20M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "2cb6ad1881950a92"
            ]
        ]
    },
    {
        "id": "827074b7c4b5c52f",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 15M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 920,
        "wires": [
            [
                "7f9c0f571555a36c"
            ]
        ]
    },
    {
        "id": "b081cc28cab2d511",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 10M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "2a1d40058df1a0c0"
            ]
        ]
    },
    {
        "id": "601d12c10f0705d4",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 6M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "6c0df889d77bb079"
            ]
        ]
    },
    {
        "id": "336c664dfb6d90d0",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode CW",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "CW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b3ee8487b8373fb4",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode SSB",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "SSB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb72f4a0819f216",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode RTTY",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "RTTY",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ea2c06042157739b",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 2M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1620,
        "wires": [
            [
                "1a3d73e8503ccb11"
            ]
        ]
    },
    {
        "id": "cd4d5af286e17fe4",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 70CM",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "70CM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "1a3d73e8503ccb11"
            ]
        ]
    },
    {
        "id": "1a3d73e8503ccb11",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode FM",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "FM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1440,
        "wires": [
            [
                "e8279fe0447232c9"
            ]
        ]
    },
    {
        "id": "269ebb5a81c35055",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "83d55f2c.f5d7f"
            ]
        ]
    },
    {
        "id": "34d9a1b4550bd48a",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 220,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "c629474c.113e38"
            ]
        ]
    },
    {
        "id": "1cd63e8bfc41e0e2",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 360,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "d704dd26.1aca3"
            ]
        ]
    },
    {
        "id": "2cb6ad1881950a92",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 640,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "26752e6f.8b0412"
            ]
        ]
    },
    {
        "id": "7f9c0f571555a36c",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 920,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "3ebd4ba0.5ac374"
            ]
        ]
    },
    {
        "id": "2a1d40058df1a0c0",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "590b9a84.2eda94"
            ]
        ]
    },
    {
        "id": "6c0df889d77bb079",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 1340,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "3cffd6b7.5568ea"
            ]
        ]
    },
    {
        "id": "aa263a60635166f2",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode PSK",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "PSK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6592f02193b4f720",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode FT8",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "FT8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a75bb0a4cd22dce9",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode FT4",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "FT4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9633e9970c340a42",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 30M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "30M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 500,
        "wires": [
            [
                "5aecbd82f0d3a3c8"
            ]
        ]
    },
    {
        "id": "5aecbd82f0d3a3c8",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 500,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "fcf3ece224ef9deb"
            ]
        ]
    },
    {
        "id": "657f7ed9e70dc511",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 17M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "17M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 780,
        "wires": [
            [
                "1476dd53b206a912"
            ]
        ]
    },
    {
        "id": "1476dd53b206a912",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 780,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b8e6e94848e85e84"
            ]
        ]
    },
    {
        "id": "97b1aecc1370f875",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Band 12M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "12M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1060,
        "wires": [
            [
                "cbcd8a4415438004"
            ]
        ]
    },
    {
        "id": "cbcd8a4415438004",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "Mode in Comment",
        "property": "payload.comment",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PSK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "336c664dfb6d90d0"
            ],
            [
                "1bb72f4a0819f216"
            ],
            [
                "6592f02193b4f720"
            ],
            [
                "a75bb0a4cd22dce9"
            ],
            [
                "aa263a60635166f2"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "b3ee8487b8373fb4"
            ],
            [
                "f9c68a742409fc86"
            ]
        ]
    },
    {
        "id": "fcf3ece224ef9deb",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "30M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21070.0",
                "vt": "num",
                "v2": "21100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21100.1",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b8e6e94848e85e84",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "17M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21070.0",
                "vt": "num",
                "v2": "21100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21100.1",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 1100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f9c68a742409fc86",
        "type": "switch",
        "z": "8d355125d2e4edb6",
        "name": "12M Mode Parser",
        "property": "payload.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21069.9",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21070.0",
                "vt": "num",
                "v2": "21100.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21100.1",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1670,
        "y": 1220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e8279fe0447232c9",
        "type": "change",
        "z": "8d355125d2e4edb6",
        "name": "Set Mode Other",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "Other",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5eb0bd6b.74b794",
        "type": "function",
        "z": "2924702c.b33a7",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "7dfbf25f8f9e3e9d",
        "type": "ui_worldmap",
        "z": "6fd9c5c3c10bf6a2",
        "group": "d0d073ec2c91ebda",
        "order": 1,
        "width": 20,
        "height": 11,
        "name": "",
        "lat": "39.828175",
        "lon": "-95.735567",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/potamapband",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 3186.2500076293945,
        "y": 160,
        "wires": []
    },
    {
        "id": "f9ed3b0b.0726c8",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 540,
        "wires": [
            [
                "37ec076fa43bbdfa",
                "b9746139.dc1ea"
            ]
        ]
    },
    {
        "id": "b9746139.dc1ea",
        "type": "http request",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.pota.app/spot/activator",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 756.2500076293945,
        "y": 540,
        "wires": [
            [
                "8ab6a6b6.193008"
            ]
        ]
    },
    {
        "id": "a39eb29.44da95",
        "type": "comment",
        "z": "6fd9c5c3c10bf6a2",
        "name": "POTA Spotting Network - https://api.pota.app/spot/activator",
        "info": "",
        "x": 810,
        "y": 600,
        "wires": []
    },
    {
        "id": "b6dbdd91.34748",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Format Spot & Distance",
        "func": "let type = \"spot\";\nlet id = msg.payload.spotId;\nlet freq1 = msg.payload.frequency;\nlet freq = parseFloat(freq1).toFixed(1)\nlet mode = msg.payload.mode;\nlet call = msg.payload.activator;\nlet commentpad = msg.payload.comments;\nlet comment = commentpad.padEnd(25);\nlet timeraw = msg.payload.spotTime;\nlet x = msg.payload.spotTime.replace(\":\",\"\");\nlet time = x.substr(11,4)+\"Z\";\n//let state = msg.payload.state;\nlet calllength = call.length;\nlet parkref = msg.payload.reference;\nlet parkname = msg.payload.name;\nlet grid = msg.payload.grid6;\nlet lat = msg.payload.latitude;\nlet lon = msg.payload.longitude;\nlet locationdesc = msg.payload.locationDesc;\nlet count = msg.payload.count;\nlet expire = msg.payload.expire;\n\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\n\nlet lat1 = global.get('homelat');\nlet lat2 = msg.payload.latitude;\nlet lon1 = global.get('homelon');\nlet lon2 = msg.payload.longitude;\n\nvar R = 6371; // Radius of the earth in km\nvar dLat = deg2rad(lat2-lat1);  // deg2rad below\nvar dLon = deg2rad(lon2-lon1); \n//var deglat1 = lat1 * (Math.PI/180);\n//var deglat2 = lat2 * (Math.PI/180);\nvar a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\nvar miles = d * 0.62137 //convert to miles\n\nlet distance = parseInt(miles) + \"M\";\n\nlet homelat = global.get('homelat');\nlet homelon = global.get('homelon');\n\nif (homelat === undefined || homelon === undefined)\n{\n    distance = 0;\n}\n\nreturn {payload : {type:type,id:id,freq:freq, mode:mode,call:call,comment:comment,time:time,\nlocationdesc:locationdesc,calllength:calllength,parkref:parkref,parkname:parkname,grid:grid,lat:lat,lon:lon,distance:distance,count:count,expire:expire}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1916.2500076293945,
        "y": 480,
        "wires": [
            [
                "af418ce6.31d9b",
                "10f3f9f4195aff4b",
                "d0e7720d176d20b6"
            ]
        ]
    },
    {
        "id": "8ab6a6b6.193008",
        "type": "split",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 896.2500076293945,
        "y": 540,
        "wires": [
            [
                "8fc3bf58d94f8c94"
            ]
        ]
    },
    {
        "id": "5bbe4d93.fe20d4",
        "type": "ui_table",
        "z": "6fd9c5c3c10bf6a2",
        "group": "b1cd10a7.e2eab",
        "name": "POTA Spots",
        "order": 1,
        "width": 26,
        "height": 12,
        "columns": [
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mode",
                "title": "Mode",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "locationdesc",
                "title": "Loc Disc",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "parkref",
                "title": "Park Ref#",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "parkname",
                "title": "Park Name",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "comment",
                "title": "Comment",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Initial Spot Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "distance",
                "title": "Distance",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "lat",
                "title": "Lat",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "lon",
                "title": "Lon",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "count",
                "title": "Count",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "expire",
                "title": "Expire",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2616.2500076293945,
        "y": 480,
        "wires": [
            [
                "e78014d36971228b"
            ]
        ]
    },
    {
        "id": "52da224e.7c358c",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 180,
        "wires": []
    },
    {
        "id": "af418ce6.31d9b",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2176.2500076293945,
        "y": 440,
        "wires": []
    },
    {
        "id": "e24a55b1.935c28",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2616.2500076293945,
        "y": 440,
        "wires": []
    },
    {
        "id": "10f3f9f4195aff4b",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Table Format",
        "func": "\n//let id = msg.payload.id;\nlet freq = msg.payload.freq;\nlet mode = msg.payload.mode;\nlet call = msg.payload.call;\nlet comment = msg.payload.comment;\nlet time = msg.payload.time\nlet state = msg.payload.state;\nlet parkref = msg.payload.parkref;\nlet parkname = msg.payload.parkname;\nlet distance = msg.payload.distance;\nlet lon = msg.payload.lon;\nlet lat = msg.payload.lat;\nlet locationdesc = msg.payload.locationdesc;\nlet count = msg.payload.count;\nlet expire = msg.payload.expire;\n\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            freq:freq,call:call,mode:mode,comment:comment,time:time,state:state,parkref:parkref,parkname:parkname,distance:distance,lon:lon,lat:lat,locationdesc:locationdesc,count:count,expire:expire\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2176.2500076293945,
        "y": 480,
        "wires": [
            [
                "e24a55b1.935c28",
                "ff4d7a3c18855c24"
            ]
        ]
    },
    {
        "id": "4c15ed9b5b31db14",
        "type": "comment",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Flow Outline",
        "info": "User enters in callsigns into database\nUser enteres in parks they have worked\n\nProgram gets spots\n\nProgram compares spots (activators and parks) against database\n\nSends out notifications (1 per hour per type)\n - email with all activators and parks\n - email with all parks\n - parsed by mode\n - \n \nMap 1 shows all spots with the following layers\n- location of spots\n- spot age with legend\n- spots not hunted\n\nMap 2 shows all spots with the follow layers\n- location of spots\n- mode of spots\n- spots not hunted\n\n\nAll spots are erased if QRT in the comments\n\n\nGraphs show\n- # of total spots\n- # of cw\n- # of ssb\n- # of digital\n- # of spots with calls you are following\n\nDatabase spots schema\nspotID unique\nactivator\nfreq\nmode\nreference\nparkname\nspottime\nspotter\ncomments\nsource\nname\nlocationdesc\ngrid4\ngrid6\nlat\nlon\ncount\n\nDatabase schema to add\nnotifiedspot - boolean\nnotifiedspottime - date\n\n\nHunted schema\nDXCC Entity\nLocation\nHASC\nReference type text unique\nPark Name\nFirst QSO Date\nQSOs\n\n",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "0a5c1edbe6988c73",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Format Spot",
        "func": "function deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\n\nlet lat1 = global.get('homelat');\nlet lat2 = msg.payload.latitude;\nlet lon1 = global.get('homelon');\nlet lon2 = msg.payload.longitude;\n\nvar R = 6371; // Radius of the earth in km\nvar dLat = deg2rad(lat2-lat1);  // deg2rad below\nvar dLon = deg2rad(lon2-lon1); \n//var deglat1 = lat1 * (Math.PI/180);\n//var deglat2 = lat2 * (Math.PI/180);\nvar a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\nvar miles = d * 0.62137 //convert to miles\n\nlet distance = parseInt(miles) + \"M\";\n\n\n\n\nlet freq = msg.payload.frequency\nlet mode = msg.payload.mode;\nlet call = msg.payload.activator;\nlet comment = msg.payload.comments;\nlet timeraw = msg.payload.spotTime;\nlet state = msg.payload.state;\nlet parkref = msg.payload.reference;\nlet parkname = msg.payload.parkName;\nlet grid = msg.payload.grid6;\nlet lat = msg.payload.latitude;\nlet lon = msg.payload.longitude;\nlet ttl = flow.get('spotttl');\n\nreturn {payload : {name:parkref,lat:lat,lon:lon,distance:distance,freq:freq,operator:call,mode:mode,ttl:55}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1776.2500076293945,
        "y": 280,
        "wires": [
            [
                "d829bd3a106b2c23",
                "7cf8bc60c0fb51ea"
            ]
        ]
    },
    {
        "id": "d39aecc1645caf74",
        "type": "ui_worldmap",
        "z": "6fd9c5c3c10bf6a2",
        "group": "0b0b1d35bd8369f6",
        "order": 1,
        "width": 20,
        "height": 11,
        "name": "",
        "lat": "39.422580",
        "lon": "-95.735567",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/potamapmode",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 3186.2500076293945,
        "y": 380,
        "wires": []
    },
    {
        "id": "ae9572035930f1ba",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 600,
        "wires": [
            [
                "9ffa6f1018ac3159",
                "f94405352227a452"
            ],
            []
        ]
    },
    {
        "id": "9ffa6f1018ac3159",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Gauge Total Active Spots",
        "group": "5255f96a02d65e0a",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Active Spots",
        "label": "Spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2476.2500076293945,
        "y": 600,
        "wires": []
    },
    {
        "id": "4da632e4e8461a46",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "SSB Spots",
        "group": "310b567a804ff916",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "SSB Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 640,
        "wires": []
    },
    {
        "id": "947b620fdcc88f80",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "CW Spots",
        "group": "310b567a804ff916",
        "order": 2,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "CW Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2446.2500076293945,
        "y": 700,
        "wires": []
    },
    {
        "id": "bdffb77946f203cf",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "FT8/FT4 Spots",
        "group": "310b567a804ff916",
        "order": 3,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "FT8/FT4 Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2466.2500076293945,
        "y": 760,
        "wires": []
    },
    {
        "id": "247130072e4481da",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 780,
        "wires": [
            [
                "bdffb77946f203cf"
            ],
            []
        ]
    },
    {
        "id": "a7db4631c91692ba",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 720,
        "wires": [
            [
                "947b620fdcc88f80"
            ],
            []
        ]
    },
    {
        "id": "ce831311c1287bbc",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 660,
        "wires": [
            [
                "4da632e4e8461a46"
            ],
            []
        ]
    },
    {
        "id": "206b9b013e38e777",
        "type": "switch",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Get Mode",
        "property": "payload.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1766.2500076293945,
        "y": 780,
        "wires": [
            [
                "ce831311c1287bbc"
            ],
            [
                "a7db4631c91692ba"
            ],
            [
                "247130072e4481da"
            ],
            [
                "247130072e4481da"
            ],
            [
                "5e4644a296cfe468"
            ]
        ]
    },
    {
        "id": "d829bd3a106b2c23",
        "type": "subflow:c9611467dc313430",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "x": 1966.2500076293945,
        "y": 180,
        "wires": [
            [
                "7dfbf25f8f9e3e9d"
            ]
        ]
    },
    {
        "id": "df2fbb83c76d6dab",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Legend",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"legend\": \"<b>Band Pin Color</b></br>  <i style=\\\"background: #dcbeff\\\"></i> 70CM<br> <i style=\\\"background: #aaffc3\\\"></i> 2M<br>  <i style=\\\"background: #FFFFFF\\\"></i> 6M<br>  <i style=\\\"background: #f58231\\\"></i> 10M<br>  <i style=\\\"background: #9A6324\\\"></i> 12M<br> <i style=\\\"background: #ffe119\\\"></i> 15M<br> <i style=\\\"background: #a9a9a9\\\"></i> 17M<br>  <i style=\\\"background: #e6194B\\\"></i> 20M<br> <i style=\\\"background: #42d4f4\\\"></i> 30M<br>  <i style=\\\"background: #4363d8\\\"></i> 40M<br>  <i style=\\\"background: #3cb44b\\\"></i> 80M<br> <i style=\\\"background: #808000\\\"></i> 60M<br>  <i style=\\\"background: #f032e6\\\"></i> 160M<br>  <i style=\\\"background: #000000\\\"></i> Else<br> \" }",
                "vt": "json"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 3426.2500076293945,
        "y": 120,
        "wires": [
            [
                "7dfbf25f8f9e3e9d"
            ]
        ]
    },
    {
        "id": "5e4644a296cfe468",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 840,
        "wires": [
            [
                "ea46acf79de9bec4"
            ],
            []
        ]
    },
    {
        "id": "ea46acf79de9bec4",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Other Spots",
        "group": "310b567a804ff916",
        "order": 4,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Other Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 820,
        "wires": []
    },
    {
        "id": "7cf8bc60c0fb51ea",
        "type": "switch",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Get Mode",
        "property": "payload.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FT8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FT4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PSK31",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1946.2500076293945,
        "y": 280,
        "wires": [
            [
                "136debc9556aeec7"
            ],
            [
                "0b4dfb56efbf89f3"
            ],
            [
                "0b4dfb56efbf89f3"
            ],
            [
                "5076c91160c8973e"
            ],
            [
                "a30253dac2641936"
            ],
            [
                "a30253dac2641936"
            ]
        ]
    },
    {
        "id": "136debc9556aeec7",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "CW Color Green",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "CW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2446.2500076293945,
        "y": 220,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "5076c91160c8973e",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "SSB Color Blue",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#0000FF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "SSB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2446.2500076293945,
        "y": 300,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "0b4dfb56efbf89f3",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "FT8/FT4 Color Red",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "FT8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2456.2500076293945,
        "y": 260,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "a30253dac2641936",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Other Color Yellow",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "Other",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2456.2500076293945,
        "y": 340,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "572955c601ec2541",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Legand",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"legend\": \"<b>Mode Pin Color</b></br> <i style=\\\"background: #008000\\\"></i> CW<br> <i style=\\\"background: #0000FF\\\"></i> SSB<br> <i style=\\\"background: #FF0000\\\"></i> FT8/FT4<br> <i style=\\\"background: #FFFF00\\\"></i> Other<br> \" }",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 3426.2500076293945,
        "y": 320,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "9e12995503002ffb",
        "type": "trigger",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "4",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1746.2500076293945,
        "y": 640,
        "wires": [
            [
                "caa8d0c9bdad9e44"
            ]
        ]
    },
    {
        "id": "caa8d0c9bdad9e44",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Send Report",
        "func": "msg.payload = \"report\";\nmsg.topic = \"mc-control\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1916.2500076293945,
        "y": 640,
        "wires": [
            [
                "ce831311c1287bbc",
                "a7db4631c91692ba",
                "247130072e4481da",
                "5e4644a296cfe468",
                "ae9572035930f1ba",
                "1947caf9250c063c",
                "8fd6acd9afc55565",
                "d62200d61be9e0c3",
                "1505b306ebec6963"
            ]
        ]
    },
    {
        "id": "1947caf9250c063c",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 920,
        "wires": [
            [
                "47e265f69792faba"
            ],
            []
        ]
    },
    {
        "id": "8fd6acd9afc55565",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 980,
        "wires": [
            [
                "e8b86bbd5fbe4952"
            ],
            []
        ]
    },
    {
        "id": "d62200d61be9e0c3",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 1040,
        "wires": [
            [
                "7988789a4e8e7ba0"
            ],
            []
        ]
    },
    {
        "id": "47e265f69792faba",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "40M Spots",
        "group": "5255f96a02d65e0a",
        "order": 2,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "40M Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 920,
        "wires": []
    },
    {
        "id": "e8b86bbd5fbe4952",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "20M Spots",
        "group": "5255f96a02d65e0a",
        "order": 3,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "20M Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 980,
        "wires": []
    },
    {
        "id": "7988789a4e8e7ba0",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "15M Spots",
        "group": "5255f96a02d65e0a",
        "order": 4,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "15M Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b43e42ad76030b6d",
        "type": "string",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Comment to 23 ToUpperCase",
        "methods": [
            {
                "name": "left",
                "params": [
                    {
                        "type": "num",
                        "value": "25"
                    }
                ]
            }
        ],
        "prop": "payload.comments",
        "propout": "payload.comments",
        "object": "msg",
        "objectout": "msg",
        "x": 1010,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8fc3bf58d94f8c94",
        "type": "switch",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Is NOT QRT",
        "property": "payload.comments",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "qrt",
                "vt": "str",
                "case": true
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1076.2500076293945,
        "y": 540,
        "wires": [
            [
                "52da224e.7c358c"
            ],
            [
                "206b9b013e38e777",
                "9e12995503002ffb",
                "ae9572035930f1ba",
                "ce4210fc1abb2be3",
                "99686b3a60ee656b",
                "4280e431bfad93cf",
                "9c8d4909faf3726d",
                "b6dbdd91.34748"
            ]
        ]
    },
    {
        "id": "391c457ae5059438",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Spot < 30 mins",
        "func": "const epochtime = Math.round(Date.now() / 1000);\n\nlet epochspottime = msg.payload.epochspottime;\n\nlet goaltime = epochtime - 1800;\n\nif (epochspottime => goaltime)\n{\n    let x = (epochspottime - goaltime) / 60;\n    msg.payload.spotage = parseInt(x)\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1586.2500076293945,
        "y": 280,
        "wires": [
            [
                "0a5c1edbe6988c73"
            ]
        ]
    },
    {
        "id": "557b188d05668207",
        "type": "moment",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Spot to Epoch",
        "topic": "",
        "input": "payload.spotTime",
        "inputType": "msg",
        "inTz": "ETC/UTC",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "X",
        "locale": "en-GB",
        "output": "payload.epochspottime",
        "outputType": "msg",
        "outTz": "ETC/UTC",
        "x": 1386.2500076293945,
        "y": 280,
        "wires": [
            [
                "391c457ae5059438"
            ]
        ]
    },
    {
        "id": "2a5f2b17.aec8a4",
        "type": "string",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Format State",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": ",US-"
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            },
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "US-"
                    },
                    {
                        "type": "str",
                        "value": ""
                    }
                ]
            }
        ],
        "prop": "payload.locationDesc",
        "propout": "payload.state",
        "object": "msg",
        "objectout": "msg",
        "x": 1616.2500076293945,
        "y": 360,
        "wires": [
            [
                "b6dbdd91.34748"
            ]
        ]
    },
    {
        "id": "53434631.8ab898",
        "type": "string",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Format Prov",
        "methods": [
            {
                "name": "chompLeft",
                "params": [
                    {
                        "type": "str",
                        "value": "CA-"
                    }
                ]
            },
            {
                "name": "left",
                "params": [
                    {
                        "type": "num",
                        "value": "2"
                    }
                ]
            }
        ],
        "prop": "payload.locationDesc",
        "propout": "payload.state",
        "object": "msg",
        "objectout": "msg",
        "x": 1616.2500076293945,
        "y": 400,
        "wires": [
            [
                "b6dbdd91.34748"
            ]
        ]
    },
    {
        "id": "ce4210fc1abb2be3",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1416.2500076293945,
        "y": 740,
        "wires": []
    },
    {
        "id": "99686b3a60ee656b",
        "type": "link out",
        "z": "6fd9c5c3c10bf6a2",
        "name": "POTA Spots OUT",
        "mode": "link",
        "links": [
            "01e93c9ca44accb5",
            "2af9677931a76168"
        ],
        "x": 1381.2500076293945,
        "y": 360,
        "wires": []
    },
    {
        "id": "8e9aba1e2c5ef505",
        "type": "string",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Format Country",
        "methods": [
            {
                "name": "chompLeft",
                "params": [
                    {
                        "type": "str",
                        "value": "-"
                    }
                ]
            },
            {
                "name": "left",
                "params": [
                    {
                        "type": "num",
                        "value": "2"
                    }
                ]
            }
        ],
        "prop": "payload.locationDesc",
        "propout": "payload.state",
        "object": "msg",
        "objectout": "msg",
        "x": 1606.2500076293945,
        "y": 440,
        "wires": [
            [
                "600b1c96d61c9f77",
                "b6dbdd91.34748"
            ]
        ]
    },
    {
        "id": "ff4d7a3c18855c24",
        "type": "delay",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2406.2500076293945,
        "y": 480,
        "wires": [
            [
                "5bbe4d93.fe20d4"
            ]
        ]
    },
    {
        "id": "dcc130a144cbd46b",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Send *****",
        "func": "let spot = msg.payload\n\nlet freq = \"****\";\nlet mode = \"****\";\nlet call = \"****\";\nlet comment = \"****\";\nlet time = \"*****\"\nlet state = \"****\";\nlet parkref = \"****\";\nlet parkname = \"****\";\n\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            freq:freq,call:call,mode:mode,comment:comment,time:time,state:state,parkref:parkref,parkname:parkname\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2356.2500076293945,
        "y": 540,
        "wires": [
            [
                "5bbe4d93.fe20d4"
            ]
        ]
    },
    {
        "id": "d0e7720d176d20b6",
        "type": "delay",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2166.2500076293945,
        "y": 540,
        "wires": [
            [
                "dcc130a144cbd46b"
            ]
        ]
    },
    {
        "id": "e48a4bd35ee01ec6",
        "type": "ui_gauge",
        "z": "6fd9c5c3c10bf6a2",
        "name": "10M Spots",
        "group": "5255f96a02d65e0a",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "10M Spots",
        "label": "spots",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2456.2500076293945,
        "y": 1100,
        "wires": []
    },
    {
        "id": "461fad0b6e254f69",
        "type": "countdown",
        "z": "6fd9c5c3c10bf6a2",
        "name": "1 Min Countdown",
        "topic": "",
        "payloadTimerStart": "true",
        "payloadTimerStartType": "bool",
        "payloadTimerStop": "false",
        "payloadTimerStopType": "bool",
        "timer": "60",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 810,
        "y": 460,
        "wires": [
            [],
            [
                "8eb5d4cf348b33fc"
            ]
        ]
    },
    {
        "id": "8eb5d4cf348b33fc",
        "type": "ui_text",
        "z": "6fd9c5c3c10bf6a2",
        "group": "1ea01737847609c8",
        "order": 1,
        "width": 4,
        "height": 3,
        "name": "Countdown Timer",
        "label": "",
        "format": "<font size = 50> {{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1030,
        "y": 460,
        "wires": []
    },
    {
        "id": "e78014d36971228b",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Draw GC Lines on Click",
        "func": "if (msg.payload == undefined)\n{\n    return;\n}\n\nlet homelat = global.get('homelat');\nlet homelon = global.get('homelon');\nlet lat = msg.payload.lat\nlet lon = msg.payload.lon\n\n//delete msg.payload.freq\n//delete msg.payload.call\n//delete msg.payload.mode\n//delete msg.payload.comment\n//delete msg.payload.time\n//delete msg.payload.state\n//delete msg.payload.parkref\n//delete msg.payload.parkname\n//delete msg.payload.distance\n//delete msg.payload.lon\n//delete msg.payload.lat\n\n//msg.payload.greatcircle = [[homelat,homelon], [lat,lon]]\n\nmsg.payload = {name:\"GC1\", layer:\"GC Lines\", color:\"#ff00ff\", greatcircle:[ [homelat,homelon], [lat,lon] ] }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2856.2500076293945,
        "y": 480,
        "wires": [
            [
                "d39aecc1645caf74",
                "7dfbf25f8f9e3e9d"
            ]
        ]
    },
    {
        "id": "4280e431bfad93cf",
        "type": "delay",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1206.2500076293945,
        "y": 280,
        "wires": [
            [
                "557b188d05668207"
            ]
        ]
    },
    {
        "id": "04333343ab4a3226",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Button",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"button\": { \"name\":\"Remove GC Lines\", \"icon\": \"fa-trash\", \"position\":\"bottomright\"} }",
                "vt": "json"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 3426.2500076293945,
        "y": 80,
        "wires": [
            [
                "7dfbf25f8f9e3e9d"
            ]
        ]
    },
    {
        "id": "6ed48c56d4f19fbb",
        "type": "worldmap in",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "path": "/potamapband",
        "events": "connect,disconnect,point,layer,bounds,files,draw,other",
        "x": 2496.2500076293945,
        "y": 80,
        "wires": [
            [
                "18ee860b6b18dee5"
            ]
        ]
    },
    {
        "id": "18ee860b6b18dee5",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Remove GC Lines",
        "func": "let homelat = global.get('homelat');\nlet homelon = global.get('homelon');\n\n\n\nif (msg.payload.name == \"Remove GC Lines\")\n{\n    msg.payload = msg.payload = {name:\"GC1\", layer:\"GC Lines\", color:\"#ff00ff\", greatcircle:[ [homelat,homelon], [homelat,homelon] ] }\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2786.2500076293945,
        "y": 60,
        "wires": [
            [
                "7dfbf25f8f9e3e9d",
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "1d821f32fa856bb6",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Button",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"button\": { \"name\":\"Remove GC Lines\", \"icon\": \"fa-trash\", \"position\":\"bottomright\"} }",
                "vt": "json"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 3426.2500076293945,
        "y": 280,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "57eab8816ba6aa5b",
        "type": "worldmap in",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "path": "/potamapmode",
        "events": "connect,disconnect,point,layer,bounds,files,draw,other",
        "x": 2496.2500076293945,
        "y": 20,
        "wires": [
            [
                "18ee860b6b18dee5"
            ]
        ]
    },
    {
        "id": "2ea7e8b8cabd2537",
        "type": "Message Counter",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "units": "minutes",
        "interval": "1",
        "alignToClock": true,
        "generator": "internal",
        "x": 2216.2500076293945,
        "y": 1100,
        "wires": [
            [
                "e48a4bd35ee01ec6"
            ],
            []
        ]
    },
    {
        "id": "9c8d4909faf3726d",
        "type": "switch",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Band Parser",
        "property": "payload.frequency",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800.0",
                "vt": "num",
                "v2": "2000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3500.0",
                "vt": "num",
                "v2": "4000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7000.0",
                "vt": "num",
                "v2": "7300.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "10100.0",
                "vt": "num",
                "v2": "10150.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14000.0",
                "vt": "num",
                "v2": "14350.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "18068.0",
                "vt": "num",
                "v2": "18168.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21000.0",
                "vt": "num",
                "v2": "21450.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "24089.0",
                "vt": "num",
                "v2": "24099.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28000.0",
                "vt": "num",
                "v2": "29700.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50000.0",
                "vt": "num",
                "v2": "54000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "144000.0",
                "vt": "num",
                "v2": "148000.0",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "440000.0",
                "vt": "num",
                "v2": "448000.0",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 1596.2500076293945,
        "y": 1120,
        "wires": [
            [
                "60a3dde0f4f1c8a9"
            ],
            [
                "e7c6f0c0d1ea8f67"
            ],
            [
                "b002b2d8a52120fc"
            ],
            [
                "bf5d006f2a2bdc7a"
            ],
            [
                "c099306c841b2d5e"
            ],
            [
                "59185520fab524da"
            ],
            [
                "12e9083b5544b3d0"
            ],
            [
                "b495a48f5d868966"
            ],
            [
                "2a4af1a9833a52e4"
            ],
            [
                "4f1a4f8e9b50add8"
            ],
            [
                "45bc79fb544f026d"
            ],
            [
                "a356ac1a03ebd73d"
            ]
        ]
    },
    {
        "id": "c2656c8f9b77872c",
        "type": "comment",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Input Frequency",
        "info": "",
        "x": 1610,
        "y": 940,
        "wires": []
    },
    {
        "id": "60a3dde0f4f1c8a9",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 160M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e7c6f0c0d1ea8f67",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 80M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b002b2d8a52120fc",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 40M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 980,
        "wires": [
            [
                "1947caf9250c063c"
            ]
        ]
    },
    {
        "id": "c099306c841b2d5e",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 20M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1060,
        "wires": [
            [
                "8fd6acd9afc55565"
            ]
        ]
    },
    {
        "id": "12e9083b5544b3d0",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 15M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1140,
        "wires": [
            [
                "d62200d61be9e0c3"
            ]
        ]
    },
    {
        "id": "2a4af1a9833a52e4",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 10M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1220,
        "wires": [
            [
                "2ea7e8b8cabd2537"
            ]
        ]
    },
    {
        "id": "4f1a4f8e9b50add8",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 6M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1876.2500076293945,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "45bc79fb544f026d",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 2M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1876.2500076293945,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "a356ac1a03ebd73d",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 70CM",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "70CM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "bf5d006f2a2bdc7a",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 30M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "30M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "59185520fab524da",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 17M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "17M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b495a48f5d868966",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Set Band 12M",
        "rules": [
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "12M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1866.2500076293945,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "f94405352227a452",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2656.2500076293945,
        "y": 560,
        "wires": []
    },
    {
        "id": "600b1c96d61c9f77",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1876.2500076293945,
        "y": 380,
        "wires": []
    },
    {
        "id": "b560bd86dc5c87f6",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3336.2500076293945,
        "y": 40,
        "wires": [
            [
                "1fef8af3224d3ace"
            ]
        ]
    },
    {
        "id": "819f2955a5f122e7",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "Inject Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3356.2500076293945,
        "y": 240,
        "wires": [
            [
                "c8937baac7291f53"
            ]
        ]
    },
    {
        "id": "1fef8af3224d3ace",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\n\nreturn {payload : {name:\"home\", lat:lat, lon:lon, icon:\"fa-home\", layer:\"Home\"}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3506.2500076293945,
        "y": 40,
        "wires": [
            [
                "7dfbf25f8f9e3e9d"
            ]
        ]
    },
    {
        "id": "c8937baac7291f53",
        "type": "function",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\n\nreturn {payload : {name:\"home\", lat:lat, lon:lon, icon:\"fa-home\",layer:\"Home\"}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3546.2500076293945,
        "y": 240,
        "wires": [
            [
                "d39aecc1645caf74"
            ]
        ]
    },
    {
        "id": "37ec076fa43bbdfa",
        "type": "change",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "60",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 460,
        "wires": [
            [
                "461fad0b6e254f69"
            ]
        ]
    },
    {
        "id": "940c7792cc43175e",
        "type": "inject",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1550,
        "y": 660,
        "wires": [
            [
                "9e12995503002ffb"
            ]
        ]
    },
    {
        "id": "1505b306ebec6963",
        "type": "debug",
        "z": "6fd9c5c3c10bf6a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 640,
        "wires": []
    },
    {
        "id": "4dd753c0.4c51fc",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Insert Into DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into parkalert (park) values ('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 600,
        "wires": [
            [
                "e2e48ac9.0fe508"
            ]
        ]
    },
    {
        "id": "e376670c.2b9528",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Insert into DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into designatoralert (designator) values ('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "b1be7214.9877b"
            ]
        ]
    },
    {
        "id": "c1ccc881.7ed818",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Insert into DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into callsignalert (callsign) values ('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 120,
        "wires": [
            [
                "85c377ad.ad8a68"
            ]
        ]
    },
    {
        "id": "b1a200e4.5f4fe",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Call Sign Input",
        "label": "Callsign Add",
        "group": "266fc73.4322c38",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "CALL",
                "value": "call",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "call": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 300,
        "y": 120,
        "wires": [
            [
                "bb8c8f7410987c63"
            ]
        ]
    },
    {
        "id": "f7cbb846.f9c478",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Park Designator Add",
        "label": "Park Designator Add",
        "group": "266fc73.4322c38",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Full Park Designator (with dash)",
                "value": "park",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "park": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "c7d3dbb4c905df4c"
            ]
        ]
    },
    {
        "id": "e2e48ac9.0fe508",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "select * from wanted_states;",
        "name": "Park POTA",
        "x": 970,
        "y": 620,
        "wires": [
            [
                "ae526751.368a48"
            ]
        ]
    },
    {
        "id": "b1be7214.9877b",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Country POTA",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "4b483271.d6656c"
            ]
        ]
    },
    {
        "id": "85c377ad.ad8a68",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Callsign POTA",
        "x": 960,
        "y": 140,
        "wires": [
            [
                "def98977e5b1a618",
                "607ea76b126de1e6"
            ]
        ]
    },
    {
        "id": "bd07a513.386db8",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Insert SQL Commands",
        "info": "Insert into database\n\ninsert into rover (callsign) values ('CALLSIGN');\ninsert into instate (callsign,county) values ('CALLSIGN','COUNTY');\n\n",
        "x": 660,
        "y": 60,
        "wires": []
    },
    {
        "id": "3c1b494e.5f3dc6",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Select All States or Provs",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select * from locdescalert order by locdesc desc;",
        "output": "str",
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "7c6faff2.e35a1"
            ]
        ]
    },
    {
        "id": "2364f536.d6b11a",
        "type": "inject",
        "z": "1950552b.d4018b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "3c1b494e.5f3dc6"
            ]
        ]
    },
    {
        "id": "857d578d.0ef418",
        "type": "split",
        "z": "1950552b.d4018b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "d66e9fd7.dc63c"
            ]
        ]
    },
    {
        "id": "c6a13f52.c1ecd",
        "type": "ui_table",
        "z": "1950552b.d4018b",
        "group": "d0ac2fe7.d9f9c",
        "name": "Wanted Location Description",
        "order": 2,
        "width": 4,
        "height": 19,
        "columns": [
            {
                "field": "locdesc",
                "title": "Location Description",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1180,
        "y": 1260,
        "wires": []
    },
    {
        "id": "d66e9fd7.dc63c",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let locdesc = msg.payload.locdesc;\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            locdesc:locdesc\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1260,
        "wires": [
            [
                "c6a13f52.c1ecd"
            ]
        ]
    },
    {
        "id": "e4f38faf.931e7",
        "type": "ui_table",
        "z": "1950552b.d4018b",
        "group": "64ea1b22.59ae54",
        "name": "Park",
        "order": 2,
        "width": 4,
        "height": 19,
        "columns": [
            {
                "field": "park",
                "title": "Park",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1110,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7d9b090f.e3cf98",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 590,
        "y": 1460,
        "wires": [
            [
                "452ff671.fb8f48"
            ]
        ]
    },
    {
        "id": "5493484b.89b838",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Select All Parks",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select * from parkalert order by park desc;",
        "output": "str",
        "x": 390,
        "y": 1460,
        "wires": [
            [
                "7d9b090f.e3cf98"
            ]
        ]
    },
    {
        "id": "9d4a46ce.ce2008",
        "type": "inject",
        "z": "1950552b.d4018b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1460,
        "wires": [
            [
                "5493484b.89b838"
            ]
        ]
    },
    {
        "id": "b1701b55.704828",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1420,
        "wires": []
    },
    {
        "id": "452ff671.fb8f48",
        "type": "split",
        "z": "1950552b.d4018b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 720,
        "y": 1460,
        "wires": [
            [
                "b1701b55.704828",
                "a7e244ce.f07b68"
            ]
        ]
    },
    {
        "id": "1e35c22b.0d72fe",
        "type": "ui_button",
        "z": "1950552b.d4018b",
        "name": "List Parks Button",
        "group": "64ea1b22.59ae54",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "List Parks",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 1500,
        "wires": [
            [
                "5493484b.89b838",
                "bdb766e3.db8d38"
            ]
        ]
    },
    {
        "id": "a7e244ce.f07b68",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let park = msg.payload.park\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            park:park\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1460,
        "wires": [
            [
                "e4f38faf.931e7"
            ]
        ]
    },
    {
        "id": "bdb766e3.db8d38",
        "type": "delay",
        "z": "1950552b.d4018b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 710,
        "y": 1500,
        "wires": [
            [
                "7e7affd6.01b0a"
            ]
        ]
    },
    {
        "id": "7e7affd6.01b0a",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let park = '*********'\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            park:park\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1500,
        "wires": [
            [
                "e4f38faf.931e7"
            ]
        ]
    },
    {
        "id": "7c6faff2.e35a1",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "select * from wanted_states;",
        "name": "",
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "857d578d.0ef418",
                "6827f9239957838b"
            ]
        ]
    },
    {
        "id": "e59b44ec.9ef2b8",
        "type": "ui_button",
        "z": "1950552b.d4018b",
        "name": "List Location Description Button",
        "group": "d0ac2fe7.d9f9c",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "List Location Description",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "3c1b494e.5f3dc6",
                "6136dd68.3d03f4"
            ]
        ]
    },
    {
        "id": "6136dd68.3d03f4",
        "type": "delay",
        "z": "1950552b.d4018b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 760,
        "y": 1300,
        "wires": [
            [
                "d6c6d44b.f27c78"
            ]
        ]
    },
    {
        "id": "d6c6d44b.f27c78",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let locdesc = '********'\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            locdesc:locdesc\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1300,
        "wires": [
            [
                "c6a13f52.c1ecd"
            ]
        ]
    },
    {
        "id": "4e25eacd.d604b4",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Select All Callsigns",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select * from callsignalert order by callsign desc",
        "output": "str",
        "x": 410,
        "y": 880,
        "wires": [
            [
                "92ae16d3.e67558"
            ]
        ]
    },
    {
        "id": "a92b9b29.96bc58",
        "type": "split",
        "z": "1950552b.d4018b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 880,
        "wires": [
            [
                "1a410a5.70ec5f6",
                "20a817d7.f3ec98"
            ]
        ]
    },
    {
        "id": "fab6ea40.1e4a98",
        "type": "ui_table",
        "z": "1950552b.d4018b",
        "group": "5543b98b5680f25b",
        "name": "Callsign Table",
        "order": 2,
        "width": 4,
        "height": 19,
        "columns": [
            {
                "field": "call",
                "title": "Callsign",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1100,
        "y": 880,
        "wires": []
    },
    {
        "id": "1a410a5.70ec5f6",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let call = msg.payload.callsign;\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            call:call\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 880,
        "wires": [
            [
                "fab6ea40.1e4a98"
            ]
        ]
    },
    {
        "id": "92ae16d3.e67558",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "select * from wanted_states;",
        "name": "",
        "x": 590,
        "y": 880,
        "wires": [
            [
                "a92b9b29.96bc58"
            ]
        ]
    },
    {
        "id": "433612f.6e2a8ec",
        "type": "ui_button",
        "z": "1950552b.d4018b",
        "name": "List Callsign Button",
        "group": "5543b98b5680f25b",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "List Callsigns",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "4e25eacd.d604b4",
                "2d6fc378.b88fbc"
            ]
        ]
    },
    {
        "id": "6c48208a.bce4c",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let call = '*******'\n\nreturn {\"payload\":{\n    \"command\":\"addRow\",\n    \"arguments\":[\n        {\n            call:call\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 920,
        "wires": [
            [
                "fab6ea40.1e4a98"
            ]
        ]
    },
    {
        "id": "20a817d7.f3ec98",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "2d6fc378.b88fbc",
        "type": "delay",
        "z": "1950552b.d4018b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 760,
        "y": 920,
        "wires": [
            [
                "6c48208a.bce4c"
            ]
        ]
    },
    {
        "id": "a6a0b27e.7124b",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Status",
        "func": "topic = msg.topic\n\nstatus = topic +\" was successful\";\npri = '#00FF00';\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            pri:pri,status:status \n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4b483271.d6656c",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Status",
        "func": "topic = msg.topic\n\nstatus = topic +\" was successful\";\npri = '#00FF00';\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            pri:pri,status:status \n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "ae526751.368a48",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Status",
        "func": "topic = msg.topic\n\nstatus = topic +\" was successful\";\npri = '#00FF00';\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            pri:pri,status:status \n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e3748ae5.164e98",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Insert SQL Commands",
        "info": "In State Insert\n\ninsert into instate (callsign,county) values ('call','county');",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "16eac13a.565fdf",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Insert SQL Commands Wanted State",
        "info": "Insert Wanted State\n\ninsert into wanted_states (wanted_state) values ('state');",
        "x": 660,
        "y": 540,
        "wires": []
    },
    {
        "id": "26b2b277.b8785e",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Delete SQL Commands",
        "info": "Delete SQL Commands\n\nDelete from database\n\ndelete from wanted_states where wanted_state=('state');",
        "x": 960,
        "y": 540,
        "wires": []
    },
    {
        "id": "a0394f63.c10c7",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Select All Countries",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select * from designatoralert order by designator desc;",
        "output": "str",
        "x": 390,
        "y": 1060,
        "wires": [
            [
                "e89e8823.f25bc8"
            ]
        ]
    },
    {
        "id": "386eb5ef.b370ea",
        "type": "inject",
        "z": "1950552b.d4018b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1060,
        "wires": [
            [
                "a0394f63.c10c7"
            ]
        ]
    },
    {
        "id": "de8732.1184a8d",
        "type": "split",
        "z": "1950552b.d4018b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "da4274f9.750608",
                "6e3eacaa.4a3994"
            ]
        ]
    },
    {
        "id": "d61681dd.77483",
        "type": "ui_table",
        "z": "1950552b.d4018b",
        "d": true,
        "group": "55d6abfe8c5c758e",
        "name": "Country Designator Table",
        "order": 2,
        "width": 4,
        "height": 19,
        "columns": [
            {
                "field": "country",
                "title": "Country Designator",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1130,
        "y": 1060,
        "wires": []
    },
    {
        "id": "da4274f9.750608",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let country = msg.payload.designator\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            country:country\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "d61681dd.77483",
                "f8d93a7f0517efb9"
            ]
        ]
    },
    {
        "id": "e89e8823.f25bc8",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "select * from wanted_states;",
        "name": "",
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "de8732.1184a8d"
            ]
        ]
    },
    {
        "id": "1beace53.506ce2",
        "type": "ui_button",
        "z": "1950552b.d4018b",
        "d": true,
        "name": "List Countries Button",
        "group": "55d6abfe8c5c758e",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "List Countries",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "a0394f63.c10c7",
                "51d3be3e.7919a"
            ]
        ]
    },
    {
        "id": "210843a5.d7f08c",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Format Spot",
        "func": "let country = '*******'\n\nreturn {\"payload\":{\n    \"command\":\"addRow\",\n    \"arguments\":[\n        {\n            country:country\n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1100,
        "wires": [
            [
                "d61681dd.77483"
            ]
        ]
    },
    {
        "id": "6e3eacaa.4a3994",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1000,
        "wires": []
    },
    {
        "id": "51d3be3e.7919a",
        "type": "delay",
        "z": "1950552b.d4018b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "210843a5.d7f08c"
            ]
        ]
    },
    {
        "id": "50a9413d.75747",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete From DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from callsignalert where callsign=('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 160,
        "wires": [
            [
                "85c377ad.ad8a68"
            ]
        ]
    },
    {
        "id": "472ce15a.54707",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Call Sign Delete",
        "label": "Callsign Delete",
        "group": "1d9dce79.e995e2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "CALL",
                "value": "call",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "call": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "dedb99a9fe50cdc4"
            ]
        ]
    },
    {
        "id": "32e7cef0.706e42",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete From DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from designatoralert where designator=('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 320,
        "wires": [
            [
                "b1be7214.9877b"
            ]
        ]
    },
    {
        "id": "d923921b.49016",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "d": true,
        "name": "Country Designator Delete",
        "label": "Counry Designator Delete",
        "group": "1d9dce79.e995e2",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Letter Country Designator",
                "value": "designator",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "designator": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "59b33a762b74115f"
            ]
        ]
    },
    {
        "id": "3daed50d.0c5d9a",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete From DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from parkalert where park=('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 640,
        "wires": [
            [
                "e2e48ac9.0fe508"
            ]
        ]
    },
    {
        "id": "b0eee79d.ab6408",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Park Designator Delete",
        "label": "Park Designator Delete",
        "group": "1d9dce79.e995e2",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Full Park Designator (with dash)",
                "value": "park",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "park": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "340ed3b342aefa4a"
            ]
        ]
    },
    {
        "id": "125a449f.5d5a7b",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "d": true,
        "name": "Country Designator Add",
        "label": "Country Designator Add",
        "group": "266fc73.4322c38",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Letter Country Designator",
                "value": "designator",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "designator": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "101a17e148e469f7"
            ]
        ]
    },
    {
        "id": "43a9426b.ff364c",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Delete SQL Commands",
        "info": "Delete from database\n\ndelete from rover where callsign=('CALLSIGN');\n\nselect exchange1,count(exchange1) from qsos group by exchange1;\n\n",
        "x": 900,
        "y": 60,
        "wires": []
    },
    {
        "id": "8bea1a19dce42213",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Delete SQL Commands",
        "info": "Delete from database\n\ndelete from rover where callsign=('CALLSIGN');\n\nselect exchange1,count(exchange1) from qsos group by exchange1;\n\n",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "886f3d06b5ceb84d",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Show All Callsigns to Alert On",
        "info": "",
        "x": 290,
        "y": 800,
        "wires": []
    },
    {
        "id": "5c6ccfd2a4b5a5ff",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Show All Country Designators to Alert On",
        "info": "",
        "x": 320,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1088bcd99f4d8fd0",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Show All Parks to Alert On",
        "info": "",
        "x": 320,
        "y": 1180,
        "wires": []
    },
    {
        "id": "68d9cc0e0cac36f8",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Insert into DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into locdescalert (locdesc) values ('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 420,
        "wires": [
            [
                "064f98d9f0f79297"
            ]
        ]
    },
    {
        "id": "064f98d9f0f79297",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "LocDesc POTA",
        "x": 960,
        "y": 440,
        "wires": [
            [
                "3fdc5832fbe44d07"
            ]
        ]
    },
    {
        "id": "3fdc5832fbe44d07",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Status",
        "func": "topic = msg.topic\n\nstatus = topic +\" was successful\";\npri = '#00FF00';\n\nreturn {\"payload\":{\n    \"command\":\"addData\",\n    \"arguments\":[\n        {\n            pri:pri,status:status \n        },\n        true\n    ],\n    \"returnPromise\":true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d196a1dadc22ca47",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Insert SQL Commands",
        "info": "In State Insert\n\ninsert into instate (callsign,county) values ('call','county');",
        "x": 660,
        "y": 380,
        "wires": []
    },
    {
        "id": "555dda47951559c1",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete From DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from locdescalert where locdesc=('{{payload}}');",
        "output": "str",
        "x": 760,
        "y": 460,
        "wires": [
            [
                "064f98d9f0f79297"
            ]
        ]
    },
    {
        "id": "b046e6fafb9ed47e",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Location Desc Designator Delete",
        "label": "Location Desc Designator Delete",
        "group": "1d9dce79.e995e2",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Full Loc Desc Designator",
                "value": "locdesc",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "locdesc": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "6523a6d35adae19e"
            ]
        ]
    },
    {
        "id": "889ace0c028898e4",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "LocDesc Designator Add",
        "label": "Location Desc Designator Add",
        "group": "266fc73.4322c38",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Full Loc Desc Designator",
                "value": "locdesc",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "locdesc": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 250,
        "y": 420,
        "wires": [
            [
                "8073f5c8d15b5b4f"
            ]
        ]
    },
    {
        "id": "1d929a68334ee5f6",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Delete SQL Commands",
        "info": "Delete from database\n\ndelete from rover where callsign=('CALLSIGN');\n\nselect exchange1,count(exchange1) from qsos group by exchange1;\n\n",
        "x": 880,
        "y": 380,
        "wires": []
    },
    {
        "id": "f8d93a7f0517efb9",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7a4b515df88258ed",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "name": "Lat & Lon Input",
        "label": "",
        "group": "2b43e4ca38d9b76c",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "lat",
                "value": "lat",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "lon",
                "value": "lon",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "lat": "",
            "lon": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 1720,
        "wires": [
            [
                "f9dceb53cc0b5821",
                "dc6bf02cba92c9fc"
            ]
        ]
    },
    {
        "id": "f9dceb53cc0b5821",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1760,
        "wires": []
    },
    {
        "id": "dc6bf02cba92c9fc",
        "type": "change",
        "z": "1950552b.d4018b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "homelat",
                "pt": "global",
                "to": "payload.lat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "homelon",
                "pt": "global",
                "to": "payload.lon",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1720,
        "wires": [
            [
                "c77ffb1f28a8bc8e"
            ]
        ]
    },
    {
        "id": "fb6c340e0efe1add",
        "type": "ui_toast",
        "z": "1950552b.d4018b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 850,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "c77ffb1f28a8bc8e",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set payload to printout",
        "func": "\nmsg.payload = \"Entered;   lat:   \" + msg.payload.lat + \"   lon:   \" + msg.payload.lon;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "fb6c340e0efe1add"
            ]
        ]
    },
    {
        "id": "3ae850cc68585fca",
        "type": "ui_text",
        "z": "1950552b.d4018b",
        "group": "2b43e4ca38d9b76c",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "Current Lat & Lon",
        "label": "Current Home Lat & Lon",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 810,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6e48cbe3f5469ec6",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Get Lat & Lon",
        "func": "let homelat = global.get('homelat')\nlet homelon = global.get('homelon')\n\nif (homelat == '' || homelon == '')\n{\n    msg.payload = \"Home Lat & Lon Not Set\"\n}\nelse\n{\n    msg.payload = homelat + ',' + homelon\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1680,
        "wires": [
            [
                "3ae850cc68585fca"
            ]
        ]
    },
    {
        "id": "a41b305808137c29",
        "type": "inject",
        "z": "1950552b.d4018b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 410,
        "y": 1680,
        "wires": [
            [
                "6e48cbe3f5469ec6"
            ]
        ]
    },
    {
        "id": "3b83c4e82671e53a",
        "type": "comment",
        "z": "1950552b.d4018b",
        "name": "Lat & Lon Input",
        "info": "This flow gets the lat and lon input and allows great circle lines to be drawn from the QTH to each pin in the map.\n\nIf no lat and lon are input, the greatcircle lines are not drawn.",
        "x": 200,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6827f9239957838b",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bb8c8f7410987c63",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.call.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "c1ccc881.7ed818"
            ]
        ]
    },
    {
        "id": "101a17e148e469f7",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.designator.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "e376670c.2b9528"
            ]
        ]
    },
    {
        "id": "8073f5c8d15b5b4f",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.locdesc.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "68d9cc0e0cac36f8"
            ]
        ]
    },
    {
        "id": "c7d3dbb4c905df4c",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.park.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 600,
        "wires": [
            [
                "4dd753c0.4c51fc"
            ]
        ]
    },
    {
        "id": "0bda46604f620f66",
        "type": "ui_button",
        "z": "1950552b.d4018b",
        "name": "Nuke Database Button",
        "group": "0c742b00f4db5487",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "NUKE",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 1900,
        "wires": [
            [
                "38067fa86ee8c455"
            ]
        ]
    },
    {
        "id": "2a741d9afeb242e7",
        "type": "ui_dropdown",
        "z": "1950552b.d4018b",
        "name": "Nuke Database Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Pick a Database",
        "group": "0c742b00f4db5487",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Pick A Database",
                "value": "pickdatabase",
                "type": "str"
            },
            {
                "label": "Callsign Database",
                "value": "callsign",
                "type": "str"
            },
            {
                "label": "Park Database",
                "value": "park",
                "type": "str"
            },
            {
                "label": "Loc Desc Database",
                "value": "locdesc",
                "type": "str"
            },
            {
                "label": "Country Database",
                "value": "country",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 420,
        "y": 2000,
        "wires": [
            [
                "6bc3f95ecd9927c7",
                "9daebc1744b7bfae"
            ]
        ]
    },
    {
        "id": "9188321d76e1d59c",
        "type": "switch",
        "z": "1950552b.d4018b",
        "name": "Database?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "callsign",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "park",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "locdesc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "country",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 990,
        "y": 1900,
        "wires": [
            [
                "e63dff2bc35c982a"
            ],
            [
                "e8afdf9c60f17828"
            ],
            [
                "24807187781d4148"
            ],
            [
                "66837682c6a1dde7"
            ]
        ]
    },
    {
        "id": "e63dff2bc35c982a",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete * from callsignalert",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from callsignalert;",
        "output": "str",
        "x": 1330,
        "y": 1840,
        "wires": [
            [
                "a2b5d418351c3cca"
            ]
        ]
    },
    {
        "id": "e8afdf9c60f17828",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete * from parkalert",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from parkalert;",
        "output": "str",
        "x": 1340,
        "y": 1880,
        "wires": [
            [
                "a2b5d418351c3cca"
            ]
        ]
    },
    {
        "id": "24807187781d4148",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete from locationdescalert",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from locdescalert;",
        "output": "str",
        "x": 1340,
        "y": 1920,
        "wires": [
            [
                "a2b5d418351c3cca"
            ]
        ]
    },
    {
        "id": "66837682c6a1dde7",
        "type": "template",
        "z": "1950552b.d4018b",
        "name": "Delete from designatoralert",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from designatoralert;",
        "output": "str",
        "x": 1320,
        "y": 1960,
        "wires": [
            [
                "a2b5d418351c3cca"
            ]
        ]
    },
    {
        "id": "a2b5d418351c3cca",
        "type": "sqlite",
        "z": "1950552b.d4018b",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "select * from wanted_states;",
        "name": "",
        "x": 1590,
        "y": 1900,
        "wires": [
            [
                "beb96cdb29c3ac34"
            ]
        ]
    },
    {
        "id": "c50790905cba8d5d",
        "type": "ui_toast",
        "z": "1950552b.d4018b",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1870,
        "y": 1960,
        "wires": []
    },
    {
        "id": "beb96cdb29c3ac34",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6bc3f95ecd9927c7",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Database Clear",
        "func": "let x = msg.payload\nflow.set(\"dbaseclear\",x)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "9daebc1744b7bfae",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2140,
        "wires": []
    },
    {
        "id": "fbdec58d3d2f8c52",
        "type": "inject",
        "z": "1950552b.d4018b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "pickdatabase",
        "payloadType": "str",
        "x": 160,
        "y": 2000,
        "wires": [
            [
                "2a741d9afeb242e7"
            ]
        ]
    },
    {
        "id": "38067fa86ee8c455",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Get Database Nuke ",
        "func": "msg.payload = flow.get('dbaseclear')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1900,
        "wires": [
            [
                "9188321d76e1d59c"
            ]
        ]
    },
    {
        "id": "def98977e5b1a618",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Set Status",
        "func": "msg.payload = msg.topic;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "607ea76b126de1e6",
        "type": "debug",
        "z": "1950552b.d4018b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 240,
        "wires": []
    },
    {
        "id": "8832c1eac05c6e44",
        "type": "catch",
        "z": "1950552b.d4018b",
        "name": "",
        "scope": [
            "e2e48ac9.0fe508",
            "b1be7214.9877b",
            "85c377ad.ad8a68",
            "064f98d9f0f79297"
        ],
        "uncaught": false,
        "x": 1450,
        "y": 440,
        "wires": [
            [
                "d8d8a7460704d3b7"
            ]
        ]
    },
    {
        "id": "d8d8a7460704d3b7",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "Error Payload",
        "func": "msg.payload = msg.payload + \" is a duplicate entry!\"\nmsg.topic = \"Database Error!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 440,
        "wires": [
            [
                "176202cb9746d7dd"
            ]
        ]
    },
    {
        "id": "a9950e7e45d24250",
        "type": "ui_form",
        "z": "1950552b.d4018b",
        "d": true,
        "name": "Notifications Input Text Box",
        "label": "Notifications (default 60 mins)",
        "group": "474ee316d470b386",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Mins per Callsign",
                "value": "callnotify",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Mins per Park",
                "value": "parknotify",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Mins per Location Desc",
                "value": "locdescnotify",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Mins per Country",
                "value": "countrynotify",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "callnotify": "",
            "parknotify": "",
            "locdescnotify": "",
            "countrynotify": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 320,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "dedb99a9fe50cdc4",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.call.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "50a9413d.75747"
            ]
        ]
    },
    {
        "id": "59b33a762b74115f",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.designator.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 320,
        "wires": [
            [
                "32e7cef0.706e42"
            ]
        ]
    },
    {
        "id": "6523a6d35adae19e",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.locdesc.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "555dda47951559c1"
            ]
        ]
    },
    {
        "id": "340ed3b342aefa4a",
        "type": "function",
        "z": "1950552b.d4018b",
        "name": "To Upper Case",
        "func": "msg.payload = msg.payload.park.toUpperCase();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 640,
        "wires": [
            [
                "3daed50d.0c5d9a"
            ]
        ]
    },
    {
        "id": "176202cb9746d7dd",
        "type": "ui_toast",
        "z": "1950552b.d4018b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Database Dup Error",
        "x": 1920,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "2af9677931a76168",
        "type": "link in",
        "z": "af115e9cb7244fd2",
        "name": "",
        "links": [
            "99686b3a60ee656b"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "ca6f81025bb8fa5b"
            ]
        ]
    },
    {
        "id": "b8fbe794d24d612a",
        "type": "template",
        "z": "af115e9cb7244fd2",
        "name": "Select Callsign ",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(*) as call from callsignalert where callsign='{{payload.activator}}'",
        "output": "str",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "2f9ecaee1333f5a3"
            ]
        ]
    },
    {
        "id": "e23fa3011b592c32",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 260,
        "wires": []
    },
    {
        "id": "2f9ecaee1333f5a3",
        "type": "sqlite",
        "z": "af115e9cb7244fd2",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "70d8e8f4191a5943"
            ]
        ]
    },
    {
        "id": "7f03888db9832979",
        "type": "ui_table",
        "z": "af115e9cb7244fd2",
        "group": "8afbd37356b63495",
        "name": "Outgoing Spots",
        "order": 1,
        "width": "14",
        "height": "10",
        "columns": [
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "park",
                "title": "Park",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "locdesc",
                "title": "LocDesc",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mode",
                "title": "Mode",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1900,
        "y": 740,
        "wires": []
    },
    {
        "id": "a51d49758a336c3f",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Table Format",
        "func": "let call = msg.original.activator;\nlet freq = msg.original.frequency;\nlet mode = msg.original.mode;\nlet park = msg.original.reference;\nlet locdesc = msg.original.locationDesc;\nlet time = msg.original.spotTime;\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            call:call,park:park,freq:freq,mode:mode,time:time,locdesc:locdesc\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 740,
        "wires": [
            [
                "7f03888db9832979",
                "81882729aacadb41"
            ]
        ]
    },
    {
        "id": "ca6f81025bb8fa5b",
        "type": "change",
        "z": "af115e9cb7244fd2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 760,
        "wires": [
            [
                "b8fbe794d24d612a",
                "6c35362b54246e05",
                "93301f048c89512f",
                "be14b43b4ccae1a0"
            ]
        ]
    },
    {
        "id": "70d8e8f4191a5943",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "",
        "property": "payload[0].call",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "e23fa3011b592c32",
                "08cbdaa98e4a85bd"
            ]
        ]
    },
    {
        "id": "11f1b90c7a399051",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Email Format",
        "func": "msg.topic = \"Activator Alert!\"\n//msg.payload = \"Activator \" + msg.original.activator + \" Freq: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nmsg.payload = \"Activator \"+ msg.original.activator + '\\r\\n' + \n\"Time: \" + msg.original.spotTime + '\\r\\n' + \n\"Freq: \" + msg.original.frequency + '\\r\\n' + \n\"Mode: \" + msg.original.mode + '\\r\\n' + \n\"Ref:\" + msg.original.reference + '\\r\\n' + \n\"Park Name: \" + msg.original.name + '\\r\\n' + \n\"Comments: \" + msg.original.comments + '\\r\\n' +\n\"Spot Expires In \" + msg.original.expire + \" Seconds \" + '\\r\\n';\n\n\nmsg.topic = \"POTA Activator Alert \" + msg.original.activator;\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 300,
        "wires": [
            [
                "cf59a02c3a461696"
            ]
        ]
    },
    {
        "id": "08cbdaa98e4a85bd",
        "type": "change",
        "z": "af115e9cb7244fd2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original.activator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "original.frequency",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 300,
        "wires": [
            [
                "8219d5dcc3f80e0d",
                "8398a372224660fb"
            ]
        ]
    },
    {
        "id": "8219d5dcc3f80e0d",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 220,
        "wires": []
    },
    {
        "id": "7eb4982f6d1f60d6",
        "type": "ui_audio",
        "z": "af115e9cb7244fd2",
        "name": "Announcement",
        "group": "8afbd37356b63495",
        "voice": "Google US English",
        "always": false,
        "x": 2420,
        "y": 760,
        "wires": []
    },
    {
        "id": "8398a372224660fb",
        "type": "rbe",
        "z": "af115e9cb7244fd2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1330,
        "y": 300,
        "wires": [
            [
                "93770aeb36d8dcda",
                "17991464ccd66a37",
                "3523629234faa7b5",
                "a51d49758a336c3f"
            ]
        ]
    },
    {
        "id": "93770aeb36d8dcda",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 260,
        "wires": []
    },
    {
        "id": "17991464ccd66a37",
        "type": "trigger",
        "z": "af115e9cb7244fd2",
        "name": "Delay Trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "60",
        "extend": false,
        "overrideDelay": true,
        "units": "min",
        "reset": "reset",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 380,
        "wires": [
            [
                "ce094812a856ce14"
            ]
        ]
    },
    {
        "id": "ce094812a856ce14",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Reset Filter",
        "func": "msg.reset = msg.topic\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 380,
        "wires": [
            [
                "8398a372224660fb"
            ]
        ]
    },
    {
        "id": "4e4f7c4f30df19e8",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Announcement Format",
        "func": "msg.topic = \"Activator Alert!\"\nmsg.payload = \"Activator \" + msg.original.activator + \" on frequency: \" + msg.original.frequency + \" using mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 260,
        "wires": [
            [
                "7eb4982f6d1f60d6"
            ]
        ]
    },
    {
        "id": "3523629234faa7b5",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "<= 1740",
        "property": "original.expire",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1740",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1540,
        "y": 300,
        "wires": [
            [
                "4e4f7c4f30df19e8",
                "11f1b90c7a399051",
                "64ae85d192365a52"
            ]
        ]
    },
    {
        "id": "64ae85d192365a52",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 340,
        "wires": []
    },
    {
        "id": "81882729aacadb41",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 700,
        "wires": []
    },
    {
        "id": "93301f048c89512f",
        "type": "template",
        "z": "af115e9cb7244fd2",
        "name": "Select Park",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(*) as reference from parkalert where park='{{payload.reference}}'",
        "output": "str",
        "x": 550,
        "y": 580,
        "wires": [
            [
                "770da07a08f89868"
            ]
        ]
    },
    {
        "id": "d9741d5435a252c6",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 540,
        "wires": []
    },
    {
        "id": "770da07a08f89868",
        "type": "sqlite",
        "z": "af115e9cb7244fd2",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 730,
        "y": 580,
        "wires": [
            [
                "06a94fc55cdb32cf"
            ]
        ]
    },
    {
        "id": "06a94fc55cdb32cf",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "",
        "property": "payload[0].reference",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 580,
        "wires": [
            [
                "d9741d5435a252c6",
                "b79df0c79ff229d9"
            ]
        ]
    },
    {
        "id": "b79df0c79ff229d9",
        "type": "change",
        "z": "af115e9cb7244fd2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original.reference",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "original.reference",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "90d59cc5ad9a4a9b",
                "c4e5877ebd8e5d18"
            ]
        ]
    },
    {
        "id": "90d59cc5ad9a4a9b",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 540,
        "wires": []
    },
    {
        "id": "c4e5877ebd8e5d18",
        "type": "rbe",
        "z": "af115e9cb7244fd2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1330,
        "y": 580,
        "wires": [
            [
                "45b71206099619e6",
                "a51d49758a336c3f",
                "a44cedc5ee5ebb55"
            ]
        ]
    },
    {
        "id": "45b71206099619e6",
        "type": "trigger",
        "z": "af115e9cb7244fd2",
        "name": "Delay Trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "60",
        "extend": false,
        "overrideDelay": true,
        "units": "min",
        "reset": "reset",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 660,
        "wires": [
            [
                "28d5efe5ca53de7a"
            ]
        ]
    },
    {
        "id": "28d5efe5ca53de7a",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Reset Filter",
        "func": "msg.reset = msg.topic\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 660,
        "wires": [
            [
                "c4e5877ebd8e5d18"
            ]
        ]
    },
    {
        "id": "be14b43b4ccae1a0",
        "type": "template",
        "z": "af115e9cb7244fd2",
        "name": "Select Designator",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(*) as locationDesc from designatoralert where designator='{{payload.locationDesc}}';",
        "output": "str",
        "x": 550,
        "y": 880,
        "wires": [
            [
                "098c0de727ee58e2"
            ]
        ]
    },
    {
        "id": "8278ddff72e8604e",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 840,
        "wires": []
    },
    {
        "id": "098c0de727ee58e2",
        "type": "sqlite",
        "z": "af115e9cb7244fd2",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 750,
        "y": 880,
        "wires": [
            [
                "c45ee1128aafd22a"
            ]
        ]
    },
    {
        "id": "c45ee1128aafd22a",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "",
        "property": "payload[0].locationDesc",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 880,
        "wires": [
            [
                "8278ddff72e8604e",
                "bc57a0c15de94dce"
            ]
        ]
    },
    {
        "id": "bc57a0c15de94dce",
        "type": "change",
        "z": "af115e9cb7244fd2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original.locationDesc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "original.locationDesc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 880,
        "wires": [
            [
                "fc9cba8cb3513de3",
                "8bc0ae7a9d6516ae"
            ]
        ]
    },
    {
        "id": "fc9cba8cb3513de3",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 840,
        "wires": []
    },
    {
        "id": "8bc0ae7a9d6516ae",
        "type": "rbe",
        "z": "af115e9cb7244fd2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1350,
        "y": 880,
        "wires": [
            [
                "b60381883c03fc2d",
                "a51d49758a336c3f",
                "36a78b78b3fc2903"
            ]
        ]
    },
    {
        "id": "b60381883c03fc2d",
        "type": "trigger",
        "z": "af115e9cb7244fd2",
        "name": "Delay Trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "60",
        "extend": false,
        "overrideDelay": true,
        "units": "min",
        "reset": "reset",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "cb84d5e4724ef0ac"
            ]
        ]
    },
    {
        "id": "cb84d5e4724ef0ac",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Reset Filter",
        "func": "msg.reset = msg.topic\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 960,
        "wires": [
            [
                "8bc0ae7a9d6516ae"
            ]
        ]
    },
    {
        "id": "882d1fc6a1d51961",
        "type": "template",
        "z": "af115e9cb7244fd2",
        "name": "Select Country",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(*) as call from callsignalert where callsign='{{payload.activator}}'",
        "output": "str",
        "x": 540,
        "y": 1160,
        "wires": [
            [
                "ea08671389d7f03e"
            ]
        ]
    },
    {
        "id": "0697caf00d8f9593",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ea08671389d7f03e",
        "type": "sqlite",
        "z": "af115e9cb7244fd2",
        "mydb": "8ad1b77eebb71f03",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 750,
        "y": 1160,
        "wires": [
            [
                "8629b9b40fa66fdf"
            ]
        ]
    },
    {
        "id": "8629b9b40fa66fdf",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "",
        "property": "payload[0].call",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 1160,
        "wires": [
            [
                "0697caf00d8f9593",
                "3471b3fdf4e5ec28"
            ]
        ]
    },
    {
        "id": "3471b3fdf4e5ec28",
        "type": "change",
        "z": "af115e9cb7244fd2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original.activator",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "original.activator",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1160,
        "wires": [
            [
                "fe24c930b3cf3e92",
                "17f7b44c3665c12b"
            ]
        ]
    },
    {
        "id": "fe24c930b3cf3e92",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 1120,
        "wires": []
    },
    {
        "id": "17f7b44c3665c12b",
        "type": "rbe",
        "z": "af115e9cb7244fd2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1350,
        "y": 1160,
        "wires": [
            [
                "8f02a4182333e264",
                "a51d49758a336c3f",
                "bbcea11bb49d6a2f"
            ]
        ]
    },
    {
        "id": "8f02a4182333e264",
        "type": "trigger",
        "z": "af115e9cb7244fd2",
        "name": "Delay Trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "60",
        "extend": false,
        "overrideDelay": true,
        "units": "min",
        "reset": "reset",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1170,
        "y": 1240,
        "wires": [
            [
                "c23d626303767666"
            ]
        ]
    },
    {
        "id": "c23d626303767666",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Reset Filter",
        "func": "msg.reset = msg.topic\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1240,
        "wires": [
            [
                "17f7b44c3665c12b"
            ]
        ]
    },
    {
        "id": "6c35362b54246e05",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 760,
        "wires": []
    },
    {
        "id": "e1b4aa329d4aa449",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Email Format",
        "func": "//msg.topic = \"Park Alert!\"\n//msg.payload = \"Activator \" + msg.original.activator + \" Freq: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nmsg.payload = \"Activator \"+ msg.original.activator + '\\r\\n' + \n\"Time: \" + msg.original.spotTime + '\\r\\n' + \n\"Freq: \" + msg.original.frequency + '\\r\\n' + \n\"Mode: \" + msg.original.mode + '\\r\\n' + \n\"Ref:\" + msg.original.reference + '\\r\\n' + \n\"Park Name: \" + msg.original.name + '\\r\\n' + \n\"Comments: \" + msg.original.comments + '\\r\\n' +\n\"Spot Expires In \" + msg.original.expire + \" Seconds \" + '\\r\\n';\n\n\nmsg.topic = \"POTA Park Alert \" + msg.original.reference;\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 580,
        "wires": [
            [
                "cf59a02c3a461696"
            ]
        ]
    },
    {
        "id": "24e754cec259ad03",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Announcement Format",
        "func": "msg.topic = \"Park Alert!\"\nmsg.payload = \"Activator \" + msg.original.activator + \" Frequency: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 540,
        "wires": [
            [
                "7eb4982f6d1f60d6"
            ]
        ]
    },
    {
        "id": "a44cedc5ee5ebb55",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "<= 1740",
        "property": "original.expire",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1740",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1640,
        "y": 580,
        "wires": [
            [
                "24e754cec259ad03",
                "e1b4aa329d4aa449",
                "3d6cf61841922ed4"
            ]
        ]
    },
    {
        "id": "3d6cf61841922ed4",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 620,
        "wires": []
    },
    {
        "id": "3be912e59145ee8e",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Email Format",
        "func": "//msg.topic = \"Park Alert!\"\n//msg.payload = \"Activator \" + msg.original.activator + \" Freq: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nmsg.payload = \"Activator \"+ msg.original.activator + '\\r\\n' + \n\"Time: \" + msg.original.spotTime + '\\r\\n' + \n\"Freq: \" + msg.original.frequency + '\\r\\n' + \n\"Mode: \" + msg.original.mode + '\\r\\n' + \n\"Ref:\" + msg.original.reference + '\\r\\n' + \n\"Park Name: \" + msg.original.name + '\\r\\n' + \n\"Comments: \" + msg.original.comments + '\\r\\n' +\n\"Spot Expires In \" + msg.original.expire + \" Seconds \" + '\\r\\n';\n\n\nmsg.topic = \"POTA Designator Alert \" + msg.original.locationDesc;\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 880,
        "wires": [
            [
                "cf59a02c3a461696"
            ]
        ]
    },
    {
        "id": "8831ca47d8f8a579",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Announcement Format",
        "func": "msg.topic = \"Park Designator\"\nmsg.payload = \"Activator \" + msg.original.activator + \" Frequency: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 840,
        "wires": [
            [
                "7eb4982f6d1f60d6"
            ]
        ]
    },
    {
        "id": "36a78b78b3fc2903",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "<= 1740",
        "property": "original.expire",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1740",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1660,
        "y": 880,
        "wires": [
            [
                "8831ca47d8f8a579",
                "3be912e59145ee8e",
                "3b415cfe82a126bd"
            ]
        ]
    },
    {
        "id": "3b415cfe82a126bd",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 920,
        "wires": []
    },
    {
        "id": "b873168e0cfaf149",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Email Format",
        "func": "//msg.topic = \"Park Alert!\"\n//msg.payload = \"Activator \" + msg.original.activator + \" Freq: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nmsg.payload = \"Activator \"+ msg.original.activator + '\\r\\n' + \n\"Time: \" + msg.original.spotTime + '\\r\\n' + \n\"Freq: \" + msg.original.frequency + '\\r\\n' + \n\"Mode: \" + msg.original.mode + '\\r\\n' + \n\"Ref:\" + msg.original.reference + '\\r\\n' + \n\"Park Name: \" + msg.original.name + '\\r\\n' + \n\"Comments: \" + msg.original.comments + '\\r\\n' +\n\"Spot Expires In \" + msg.original.expire + \" Seconds \" + '\\r\\n';\n\n\nmsg.topic = \"POTA Designator Alert \" + msg.original.locationDesc;\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1160,
        "wires": [
            [
                "cf59a02c3a461696"
            ]
        ]
    },
    {
        "id": "baa43a47c64e497e",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "Announcement Format",
        "func": "msg.topic = \"Park Designator\"\nmsg.payload = \"Activator \" + msg.original.activator + \" Frequency: \" + msg.original.frequency + \" Mode: \" + msg.original.mode + \" Time: \" + msg.original.spotTime\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1120,
        "wires": [
            [
                "7eb4982f6d1f60d6"
            ]
        ]
    },
    {
        "id": "bbcea11bb49d6a2f",
        "type": "switch",
        "z": "af115e9cb7244fd2",
        "name": "<= 1740",
        "property": "original.expire",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1740",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1560,
        "y": 1160,
        "wires": [
            [
                "baa43a47c64e497e",
                "b873168e0cfaf149",
                "6cd48265f18d730d"
            ]
        ]
    },
    {
        "id": "6cd48265f18d730d",
        "type": "debug",
        "z": "af115e9cb7244fd2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1200,
        "wires": []
    },
    {
        "id": "cf59a02c3a461696",
        "type": "function",
        "z": "af115e9cb7244fd2",
        "name": "REPLACE THIS FUNCTION WITH EMAIL NODE",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "2b733ef58fd5a483",
        "type": "e-mail",
        "z": "af115e9cb7244fd2",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2390,
        "y": 840,
        "wires": []
    },
    {
        "id": "4d6f731a.a8104c",
        "type": "debug",
        "z": "7fba952c219a3ff4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "8e54f2fc.9c692",
        "type": "tcp out",
        "z": "7fba952c219a3ff4",
        "host": "",
        "port": "7300",
        "beserver": "server",
        "base64": false,
        "end": false,
        "name": "Telnet Out:7300",
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "01e93c9ca44accb5",
        "type": "link in",
        "z": "7fba952c219a3ff4",
        "name": "Spots IN",
        "links": [
            "99686b3a60ee656b"
        ],
        "x": 175,
        "y": 200,
        "wires": [
            [
                "f7980430b0fe5395",
                "74fbbd26cacdb943"
            ]
        ]
    },
    {
        "id": "8ea8242eddf3dc3c",
        "type": "inject",
        "z": "7fba952c219a3ff4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"freq\":\"7000.1\", \"call\":\"AA0Z\", \"locationDesc\":\"us-mo\", \"comment\":\"this is a comment\",\"time\":\"1200Z\"}",
        "payloadType": "json",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "f7980430b0fe5395"
            ]
        ]
    },
    {
        "id": "f7980430b0fe5395",
        "type": "function",
        "z": "7fba952c219a3ff4",
        "name": "Telnet 7300 Out Format",
        "func": "\nconst d = new Date();\nlet x = d.getUTCHours();\nlet h = String(x).padStart(2,'0')\nlet y = d.getMinutes();\nlet m = String(y).padStart(2,'0')\n\nlet utc = h + m + \"Z\"\n\nlet freq = msg.payload.frequency\nfreq = parseInt(freq)\nfreq = freq.toFixed(1)\nfreq = freq.padStart(14)\nlet call = msg.payload.activator.padEnd(13)\nlet state = msg.payload.locationDesc.substring(0,5)\nlet county = msg.payload.reference.padEnd(4)\n//let comment1 = msg.payload.comments.padEnd(23)\nlet comment1 = msg.payload.comments.substring(0,20)\nlet comment = comment1.padEnd(23)\n\nmsg.payload = 'DX de P0TA:' + freq +'  '+ call + state + ' ' + comment + utc +'\\r\\n';\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 200,
        "wires": [
            [
                "a73b045d704a249e"
            ]
        ]
    },
    {
        "id": "74fbbd26cacdb943",
        "type": "debug",
        "z": "7fba952c219a3ff4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "a73b045d704a249e",
        "type": "delay",
        "z": "7fba952c219a3ff4",
        "name": "",
        "pauseType": "rate",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "8e54f2fc.9c692",
                "4d6f731a.a8104c"
            ]
        ]
    }
]